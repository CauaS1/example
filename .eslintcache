[{"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\index.js":"1","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\App.js":"2","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\components\\Post.js":"3","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\reducers\\index.js":"4","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\reducers\\postReducer.js":"5","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\actions\\index.js":"6"},{"size":359,"mtime":1610489852973,"results":"7","hashOfConfig":"8"},{"size":168,"mtime":1610573224968,"results":"9","hashOfConfig":"8"},{"size":2508,"mtime":1610658160402,"results":"10","hashOfConfig":"8"},{"size":174,"mtime":1610557190308,"results":"11","hashOfConfig":"8"},{"size":559,"mtime":1610660336887,"results":"12","hashOfConfig":"8"},{"size":257,"mtime":1610657704246,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"x769zi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\index.js",[],["28","29"],"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\App.js",[],"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\components\\Post.js",["30"],"import React, { useState, useEffect } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './post.css';\r\nimport User from '../icon/user.svg';\r\n\r\nimport * as postAction from '../actions/index';\r\n\r\nimport { FaHeart, FaRetweet } from 'react-icons/fa';\r\n\r\nfunction Post(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  function handleOnChange(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function handleAddPost(e) {\r\n    e.preventDefault()\r\n    const text = inputText;\r\n    props.addPost(text);\r\n    setInputText('')\r\n  }\r\n\r\n  function handleRetweet(id) {\r\n    props.retweet(id);\r\n  }\r\n\r\n\r\n  // function handleLikeColor() {\r\n  //   // setLike\r\n  // }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"input-container\">\r\n        <input type=\"text\"\r\n          placeholder=\"Write what are you thinking\"\r\n          onChange={handleOnChange}\r\n          value={inputText}\r\n        />\r\n        <button onClick={handleAddPost} type=\"submit\">\r\n          Post\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"posts-container\">\r\n        {props.post.postReducer.map(post => {\r\n          return (\r\n            <div className=\"post\" key={post.id}>\r\n              {console.log(post)}\r\n              <div className=\"top-content\">\r\n                <div className=\"photo-container\">\r\n                  <div className=\"img\">\r\n                    <img src={User} alt=\"img\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"info-container\">\r\n                  <div className=\"name-container\">\r\n                    <h4>CauaS1</h4>\r\n                  </div>\r\n                  <p>{post.text}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bottom-content\">\r\n                <div onClick={() => handleRetweet(post.id)} >\r\n                  <FaRetweet size={20} style={{ color: post.retweet ? \"#35e95f\" : \"#ccc\" }} />\r\n                </div>\r\n\r\n                <div onClick={() => { }} >\r\n                  <FaHeart size={17} style={{ color: post.like ? \"#ff304f\" : \"#ccc\" }} />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    post: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(postAction, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n\r\n","C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\reducers\\index.js",[],"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\reducers\\postReducer.js",["31"],"C:\\Users\\semne\\Documents\\ProjectsReact\\todo\\src\\actions\\index.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":27,"nodeType":"38","messageId":"39","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"41","line":12,"column":29,"nodeType":"42","messageId":"43","endLine":12,"endColumn":31},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]